### Starting build.
# Target: gui.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules gui.ml > gui.ml.depends
# Target: gui.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules gui.mli > gui.mli.depends # cached
# Target: gui.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o gui.cmi gui.mli # cached
# Target: main.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules main.ml > main.ml.depends # cached
# Target: regex.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:regex.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules regex.mli > regex.mli.depends # cached
# Target: ast.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:ast.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules ast.mli > ast.mli.depends # cached
# Target: ast.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:ast.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o ast.cmi ast.mli # cached
# Target: regex.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:regex.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o regex.cmi regex.mli # cached
# Target: main.cmo, tags: { package(lablgtk2.auto-init), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o main.cmo main.ml # cached
# Target: regex.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:regex.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules regex.ml > regex.ml.depends # cached
# Target: ast.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o ast.cmx ast.ml # cached
# Target: lexer.mll, tags: { package(lablgtk2.auto-init), extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/Users/alicepham/.opam/4.03.0/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly.depends, tags: { package(lablgtk2.auto-init), extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends # cached
# Target: parser.mly, tags: { package(lablgtk2.auto-init), byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir }
menhir --ocamlc 'ocamlfind ocamlc -package lablgtk2.auto-init' --infer parser.mly # cached
# Target: parser.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { package(lablgtk2.auto-init), byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o lexer.cmo lexer.ml # cached
# Target: parser.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o lexer.cmx lexer.ml # cached
# Target: regex.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:regex.cmx, file:regex.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o regex.cmx regex.ml # cached
# Target: main.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o main.cmx main.ml # cached
# Target: rsa.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:rsa.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules rsa.ml > rsa.ml.depends # cached
# Target: rsa.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:rsa.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules rsa.mli > rsa.mli.depends # cached
# Target: rsa.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:rsa.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o rsa.cmi rsa.mli # cached
# Target: rsa.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:rsa.cmx, file:rsa.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o rsa.cmx rsa.ml # cached
# Target: test_a.ml.depends, tags: { package(lablgtk2.auto-init), extension:ml, file:test_a.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules test_a.ml > test_a.ml.depends # cached
# Target: test_a.mli.depends, tags: { package(lablgtk2.auto-init), extension:mli, file:test_a.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package lablgtk2.auto-init -modules test_a.mli > test_a.mli.depends # cached
# Target: test_a.cmi, tags: { package(lablgtk2.auto-init), byte, compile, extension:mli, file:test_a.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package lablgtk2.auto-init -o test_a.cmi test_a.mli # cached
# Target: test_a.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:test_a.cmx, file:test_a.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o test_a.cmx test_a.ml # cached
# Target: gui.cmx, tags: { package(lablgtk2.auto-init), compile, extension:cmx, extension:ml, file:gui.cmx, file:gui.ml, implem, native, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlopt -c -package lablgtk2.auto-init -o gui.cmx gui.ml
+ ocamlfind ocamlopt -c -package lablgtk2.auto-init -o gui.cmx gui.ml
File "gui.ml", line 62, characters 4-63:
Warning 10: this expression should have type unit.
File "gui.ml", line 68, characters 4-63:
Warning 10: this expression should have type unit.
File "gui.ml", line 192, characters 4-101:
Warning 10: this expression should have type unit.
File "gui.ml", line 204, characters 4-129:
Warning 10: this expression should have type unit.
File "gui.ml", line 210, characters 4-125:
Warning 10: this expression should have type unit.
File "gui.ml", line 414, characters 6-92:
Warning 10: this expression should have type unit.
File "gui.ml", line 419, characters 6-89:
Warning 10: this expression should have type unit.
File "gui.ml", line 438, characters 36-78:
Warning 10: this expression should have type unit.
File "gui.ml", line 454, characters 7-98:
Warning 10: this expression should have type unit.
File "gui.ml", line 458, characters 7-133:
Warning 10: this expression should have type unit.
File "gui.ml", line 471, characters 37-167:
Warning 10: this expression should have type unit.
File "gui.ml", line 479, characters 34-71:
Warning 10: this expression should have type unit.
File "gui.ml", line 521, characters 4-209:
Warning 10: this expression should have type unit.
File "gui.ml", line 559, characters 4-129:
Warning 10: this expression should have type unit.
File "gui.ml", line 565, characters 4-131:
Warning 10: this expression should have type unit.
File "gui.ml", line 571, characters 4-131:
Warning 10: this expression should have type unit.
File "gui.ml", line 577, characters 4-131:
Warning 10: this expression should have type unit.
File "gui.ml", line 583, characters 4-123:
Warning 10: this expression should have type unit.
File "gui.ml", line 589, characters 4-121:
Warning 10: this expression should have type unit.
File "gui.ml", line 599, characters 6-174:
Warning 10: this expression should have type unit.
File "gui.ml", line 201, characters 6-21:
Warning 26: unused variable input_turnstile.
File "gui.ml", line 213, characters 6-21:
Warning 26: unused variable input_turnstile.
File "gui.ml", line 401, characters 6-13:
Warning 26: unused variable welcome.
# Target: gui.native, tags: { package(lablgtk2.auto-init), dont_link_with, extension:native, file:gui.native, link, native, ocaml, program, quiet, traverse, use_menhir }
ocamlfind ocamlopt -linkpkg -package lablgtk2.auto-init ast.cmx parser.cmx lexer.cmx regex.cmx main.cmx rsa.cmx test_a.cmx gui.cmx -o gui.native
# Compilation successful.
